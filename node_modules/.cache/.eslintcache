[{"/Users/amit/Desktop/Coinbook-master/src/index.js":"1","/Users/amit/Desktop/Coinbook-master/src/App.js":"2","/Users/amit/Desktop/Coinbook-master/src/serviceWorker.js":"3","/Users/amit/Desktop/Coinbook-master/src/components/Cards/Cards.js":"4","/Users/amit/Desktop/Coinbook-master/src/components/MoonPayCheckWhichCoins.js":"5","/Users/amit/Desktop/Coinbook-master/src/components/CustomizedTable/CustomizedTables.js":"6","/Users/amit/Desktop/Coinbook-master/src/components/SearchBar/SearchBar.js":"7","/Users/amit/Desktop/Coinbook-master/src/components/Settings/CurrencySettings.js":"8","/Users/amit/Desktop/Coinbook-master/src/components/MoonPayPopup.js":"9","/Users/amit/Desktop/Coinbook-master/src/components/PageSettings/pageSettings.js":"10","/Users/amit/Desktop/Coinbook-master/src/components/Chart/Chart.js":"11","/Users/amit/Desktop/Coinbook-app/src/index.js":"12","/Users/amit/Desktop/Coinbook-app/src/serviceWorker.js":"13","/Users/amit/Desktop/Coinbook-app/src/App.js":"14","/Users/amit/Desktop/Coinbook-app/src/components/Settings/CurrencySettings.js":"15","/Users/amit/Desktop/Coinbook-app/src/components/CustomizedTable/CustomizedTables.js":"16","/Users/amit/Desktop/Coinbook-app/src/components/SearchBar/SearchBar.js":"17","/Users/amit/Desktop/Coinbook-app/src/components/MoonPayPopup.js":"18","/Users/amit/Desktop/Coinbook-app/src/components/Chart/Chart.js":"19","/Users/amit/Desktop/Coinbook-app/src/components/PageSettings/pageSettings.js":"20"},{"size":503,"mtime":1603550087000,"results":"21","hashOfConfig":"22"},{"size":14866,"mtime":1638546549790,"results":"23","hashOfConfig":"22"},{"size":5086,"mtime":1603550087000,"results":"24","hashOfConfig":"22"},{"size":4820,"mtime":1626460100969,"results":"25","hashOfConfig":"22"},{"size":448,"mtime":1603550087000,"results":"26","hashOfConfig":"22"},{"size":15328,"mtime":1638403141369,"results":"27","hashOfConfig":"22"},{"size":828,"mtime":1638547193172,"results":"28","hashOfConfig":"22"},{"size":1538,"mtime":1638547249589,"results":"29","hashOfConfig":"22"},{"size":2163,"mtime":1624524316211,"results":"30","hashOfConfig":"22"},{"size":1310,"mtime":1632692720901,"results":"31","hashOfConfig":"22"},{"size":8920,"mtime":1638316350337,"results":"32","hashOfConfig":"22"},{"size":503,"mtime":1603550087000,"results":"33","hashOfConfig":"34"},{"size":5086,"mtime":1603550087000,"results":"35","hashOfConfig":"34"},{"size":13518,"mtime":1638908846218,"results":"36","hashOfConfig":"34"},{"size":1538,"mtime":1638547249589,"results":"37","hashOfConfig":"34"},{"size":13640,"mtime":1638906777724,"results":"38","hashOfConfig":"34"},{"size":828,"mtime":1638547193172,"results":"39","hashOfConfig":"34"},{"size":2163,"mtime":1624524316211,"results":"40","hashOfConfig":"34"},{"size":9578,"mtime":1638908106264,"results":"41","hashOfConfig":"34"},{"size":1309,"mtime":1638908874734,"results":"42","hashOfConfig":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"4dwul1",{"filePath":"46","messages":"47","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"pcha7e",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"74"},"/Users/amit/Desktop/Coinbook-master/src/index.js",[],["97","98"],"/Users/amit/Desktop/Coinbook-master/src/App.js",["99","100","101","102","103","104","105","106","107"],"/Users/amit/Desktop/Coinbook-master/src/serviceWorker.js",[],"/Users/amit/Desktop/Coinbook-master/src/components/Cards/Cards.js",["108","109","110","111","112","113","114","115"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./Cards.css\";\n\nexport default class CustomizedTables extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      coins: [],\n      currency: this.props.currency,\n      currency_symbols: this.props.currency_symbols,\n      currencyUpdated: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      currencyUpdated: this.props.currency,\n    });\n    fetch(\n      `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${this.props.currency}&order=market_cap_desc&per_page=100&page=1&sparkline=false`\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            coins: this.manageCoins(result),\n          });\n        },\n\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n  componentWillUpdate() {\n    if (this.props.currency !== this.state.currencyUpdated) {\n      console.log(\"lol\");\n      this.setState({\n        currencyUpdated: this.props.currency,\n      });\n      fetch(\n        `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${this.props.currency}&order=market_cap_desc&per_page=10&page=1&sparkline=false`\n      )\n        .then((res) => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              isLoaded: true,\n              coins: this.manageCoins(result),\n            });\n          },\n\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error,\n            });\n          }\n        );\n    } else {\n    }\n  }\n  handleUporDown(coinChange) {\n    if (coinChange > 0) {\n      return \"Card-up\";\n    } else {\n      return \"Card-down\";\n    }\n  }\n  roundDown(number, decimals) {\n    decimals = decimals || 0;\n    return Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n  }\n  roundDownPrice(number) {\n    if (number >= 1) {\n      const decimals = 2;\n      const amount =\n        Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n      return amount\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    } else {\n      const decimals = 4;\n      return (\n        Math.floor(number * Math.pow(10, decimals)) /\n        Math.pow(10, decimals).toString()\n      );\n    }\n  }\n  handleEmoji(coinChange) {\n    if (coinChange < -10) {\n      return <span className=\"emojicard\">💀</span>;\n    } else if (coinChange < 0) {\n      return <span className=\"emojicard\">😕</span>;\n    } else if (coinChange < 10) {\n      return <span className=\"emojicard\">😃</span>;\n    } else if (coinChange < 20) {\n      return <span className=\"emojicard\">🚀</span>;\n    } else if (coinChange > 20) {\n      return <span className=\"emojicard\">🤯</span>;\n    }\n  }\n  manageCoins(coins) {\n    let width = window.innerWidth;\n    const coinOrderByPrice = coins.sort(\n      (a, b) =>\n        parseFloat(b.price_change_percentage_24h) -\n        parseFloat(a.price_change_percentage_24h)\n    );\n    if (width > 768) {\n      return coinOrderByPrice.slice(0, 5);\n    } else {\n      return coinOrderByPrice.slice(0, 3);\n    }\n  }\n\n  render() {\n    let width = window.innerWidth;\n    const { error, isLoaded, coins, currency_symbols } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div class=\"loader\">🪙</div>;\n    } else {\n      if (width > 768) {\n        return (\n          <div class=\"row\">\n            <div class=\"column\">\n              {coins.map((coin) => (\n                <div\n                  class={this.handleUporDown(coin.price_change_percentage_24h)}\n                >\n                  <p className=\"card-text\">\n                    <img className=\"image\" src={coin.image} />\n                    {coin.name}{\" \"}\n                  </p>\n\n                  <p className=\"card-info\">\n                    {\n                      this.props.currency_symbols[\n                        this.props.currency.toUpperCase()\n                      ]\n                    }\n                    {this.roundDownPrice(coin.current_price)}\n                    &nbsp;&nbsp;&nbsp;&nbsp;\n                    {this.roundDown(coin.price_change_percentage_24h, 2)} %\n                  </p>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n      } else {\n        return <></>;\n      }\n    }\n  }\n}\n",["116","117"],"/Users/amit/Desktop/Coinbook-master/src/components/MoonPayCheckWhichCoins.js",[],"/Users/amit/Desktop/Coinbook-master/src/components/CustomizedTable/CustomizedTables.js",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144"],"import React from \"react\";\nimport Iframe from \"react-iframe\";\nimport \"./CustomizedTables.css\";\nimport Chart from \"../Chart/Chart.js\";\nimport PageSettings from \"../PageSettings/pageSettings.js\";\nimport { purple } from \"@material-ui/core/colors\";\nimport MoonPayPopup from \"../MoonPayPopup.js\";\n\nexport default class CustomizedTables extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coinClicked: \"\",\n      chartDays: 1,\n      redraw: false,\n      currency: this.props.currency,\n      currency_symbols: this.props.currency_symbols,\n      button_color: \"white\",\n      orderSelection: this.props.orderSelection,\n    };\n    this.dateClick = this.dateClick.bind(this);\n    this.buttonStyleForData = this.buttonStyleForData.bind(this);\n  }\n  handleUporDown(coinChange) {\n    if (coinChange > 0) {\n      return \"up\";\n    } else if (coinChange < -10) {\n      return \"crash\";\n    } else {\n      return \"down\";\n    }\n  }\n  handleEmoji(coinChange) {\n    if (coinChange < -20) {\n      return <span className=\"singleemoji\"></span>;\n    } else if (coinChange < -10) {\n      return <span className=\"singleemoji\"></span>;\n    } else if (coinChange < -5) {\n      return <span className=\"singleemoji\"></span>;\n    } else if (coinChange < 0) {\n      return <span className=\"singleemoji\"></span>;\n    } else if (coinChange < 10) {\n      return <span className=\"singleemoji\"></span>;\n    } else if (coinChange < 20) {\n      return <span className=\"singleemoji\"></span>;\n    } else if (coinChange > 20) {\n      return <span className=\"singleemoji\"></span>;\n    }\n  }\n\n  roundDownPrice(number) {\n    if (number >= 1) {\n      const decimals = 2;\n      const amount =\n        Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n      return amount\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    } else if (number >= 0.001) {\n      const decimals = 6;\n      return (\n        Math.floor(number * Math.pow(10, decimals)) /\n        Math.pow(10, decimals).toString()\n      );\n    } else {\n      const decimals = 9;\n      return number.toFixed(8).toString();\n    }\n  }\n  roundDown(number, decimals) {\n    decimals = decimals || 0;\n    return Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n  }\n\n  handleClick(e) {\n    if (this.state.coinClicked !== e.currentTarget.getAttribute(\"data-item\")) {\n      const coin = e.currentTarget.getAttribute(\"data-item\");\n      const coinSymbol = e.currentTarget.getAttribute(\"data-item-symbol\");\n      this.setState({\n        coinClicked: coin,\n        coinClickedSymbol: coinSymbol,\n      });\n      console.log(\"We need to get the details for \" + coin);\n    } else {\n      this.setState({\n        coinClicked: \"\",\n        coinClickedSymbol: \"\",\n      });\n    }\n    this.chartRender(this.props.coins.id, this.state.chartDays);\n  }\n\n  dateClick(e) {\n    const dayRequest = e.currentTarget.getAttribute(\"data-item\");\n    this.setState({\n      chartDays: dayRequest,\n    });\n  }\n  buttonStyleForData(e) {\n    if (e.currentTarget.getAttribute(\"data-item\") === this.state.chartDays) {\n      return \"btn-2\";\n    } else {\n      return \"btn-1\";\n    }\n  }\n\n  chartRender(coin, days, market_cap, supply, currency) {\n    let width = window.innerWidth;\n    const { error, isLoaded, coins } = this.props.coins;\n    const symbol = this.state.currency_symbols[\n      this.props.currency.toUpperCase()\n    ];\n    const coinSymbol = this.state.coinClickedSymbol;\n    if (coin === this.state.coinClicked) {\n      if (width > 768) {\n        return (\n          <tr className=\"chartandpay\">\n            <td colspan=\"8\">\n              <div class=\"container\">\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"1-days\"\n                  data-item={1}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1 day\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"7-days\"\n                  data-item={7}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1 week\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"30-days\"\n                  data-item={30}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1 month\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"30-days\"\n                  data-item={90}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  3 months\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={365}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1 year\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={730}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  2 years\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={4700}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  All time\n                </a>\n                <div class=\"container\">\n                <MoonPayPopup\n                  className=\"btn btn-1\"\n                  coin={coin}\n                  symbol={coinSymbol}\n                  coinsOnMoonPay={this.props.coinsOnMoonPay}\n                />\n              </div>\n              </div>\n\n              <Chart\n                id={coin}\n                days={days}\n                redraw={this.state.redraw}\n                currency={this.props.currency}\n                currencysymbols={symbol}\n                coinsOnMoonPay={this.props.coinsOnMoonPay}\n              />\n              <div class=\"container\">\n                <MoonPayPopup\n                  className=\"btn btn-1\"\n                  coin={coin}\n                  symbol={coinSymbol}\n                  coinsOnMoonPay={this.props.coinsOnMoonPay}\n                />\n              </div>\n            </td>\n          </tr>\n        );\n      } else {\n        return (\n          <tr className=\"chartandpay\">\n            <td colspan=\"8\">\n\n              <div class=\"container\">\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"1-days\"\n                  data-item={1}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1D\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"7-days\"\n                  data-item={7}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1W\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"30-days\"\n                  data-item={30}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1M\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"30-days\"\n                  data-item={90}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  3M\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={365}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1Y\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={730}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  2Y\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={1825}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  5Y\n                </a>\n              </div>\n\n              <Chart\n                id={coin}\n                days={days}\n                redraw={this.state.redraw}\n                currency={this.props.currency}\n                currencysymbols={symbol}\n                coinsOnMoonPay={this.props.coinsOnMoonPay}\n              />\n              <div class=\"container\">\n                <MoonPayPopup\n                  className=\"btn btn-1\"\n                  coin={coin}\n                  symbol={coinSymbol}\n                  coinsOnMoonPay={this.props.coinsOnMoonPay}\n                />\n              </div>\n            </td>\n          </tr>\n        );\n      }\n    } else {\n    }\n  }\n\n  result() {\n    let width = window.innerWidth;\n    const { error, isLoaded, coins } = this.props.coins;\n    if (coins.length > 0) {\n      if (width > 768) {\n        const pageSettings = this.props.pageSettings;\n        return coins.map((coin) => (\n          <>\n            <tr\n              key={coin.id}\n              data-item={coin.id}\n              data-item-symbol={coin.symbol}\n              onClick={this.handleClick.bind(this)}\n            >\n              <td>{coin.market_cap_rank}</td>\n              <td className=\"theCoinId\">\n                <p className=\"theCoinIdSec\">\n                  <img src={coin.image} className=\"Coin-Logo\" />\n\n                  {coin.name}\n                  <span className=\"symbol\">{coin.symbol.toUpperCase()}</span>\n                </p>\n              </td>\n              <td>\n                {this.props.currency_symbols[this.props.currency.toUpperCase()]}\n                {this.roundDownPrice(coin.current_price)}\n              </td>\n              <td\n                className={this.handleUporDown(\n                  coin.price_change_percentage_24h\n                )}\n              >\n                {this.roundDown(coin.price_change_percentage_24h, 2)}%\n              </td>\n              <td>\n                {this.state.currency_symbols[this.props.currency.toUpperCase()]}\n                {this.roundDown(coin.total_volume)\n                  .toString()\n                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              </td>\n              <td>\n                {this.state.currency_symbols[this.props.currency.toUpperCase()]}\n                {coin.market_cap\n                  .toString()\n                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              </td>\n              <td>\n                {this.roundDown(coin.circulating_supply)\n                  .toString()\n                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              </td>\n            </tr>\n\n            {this.chartRender(coin.id, this.state.chartDays)}\n          </>\n        ));\n      } else {\n        const pageSettings = this.props.pageSettings;\n        return coins.map((coin) => (\n          <>\n            <tr\n              className=\"idcoin\"\n              key={coin.id}\n              data-item={coin.id}\n              data-item-symbol={coin.symbol}\n              onClick={this.handleClick.bind(this)}\n            >\n              <td className=\"theCoinId\">\n                <p className=\"theCoinIdSec\">\n                  <img src={coin.image} className=\"Coin-Logo\" />\n\n                  {coin.name}\n                  <span className=\"symbol\">{coin.symbol.toUpperCase()}</span>\n                </p>\n              </td>\n              <td>\n                {this.props.currency_symbols[this.props.currency.toUpperCase()]}\n                {this.roundDownPrice(coin.current_price)}\n              </td>\n              <td\n                className={this.handleUporDown(\n                  coin.price_change_percentage_24h\n                )}\n              >\n                {this.roundDown(coin.price_change_percentage_24h, 2)}%\n              </td>\n            </tr>\n            {this.chartRender(\n              coin.id,\n              this.state.chartDays,\n              coin.market_cap.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n              this.roundDown(coin.circulating_supply)\n                .toString()\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n              this.state.currency_symbols[this.props.currency.toUpperCase()]\n            )}\n          </>\n        ));\n      }\n    } else {\n      return <p>No results 😕</p>;\n    }\n  }\n  render() {\n    let width = window.innerWidth;\n    const { error, isLoaded, coins } = this.props.coins;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div class=\"loader\">🪙</div>;\n    } else {\n      if (width > 768) {\n        return (\n          <table>\n            <tr>\n              <th\n                className=\"table-header-button\"\n                data-item=\"market_cap_rank\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Rank\n              </th>\n              <th>Coin</th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"current_price\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Price\n              </th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"price_change_percentage_24h\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Change 24H\n              </th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"total_volume\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Volume\n              </th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"market_cap\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                MarketCap\n              </th>\n              <th>Supply</th>\n            </tr>\n            {this.result()}\n            <tr>\n              <PageSettings\n                pageNumber={this.props.pageNumber}\n                onClick={this.props.onClick}\n                searchValue={this.props.searchValue}\n              />\n            </tr>\n          </table>\n        );\n      } else {\n        return (\n          <table>\n            <tr>\n              <th>Coin</th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"current_price\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Price\n              </th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"price_change_percentage_24h\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Change 24H\n              </th>\n            </tr>\n            {this.result()}\n            <tr>\n              <PageSettings\n                pageNumber={this.props.pageNumber}\n                onClick={this.props.onClick}\n                searchValue={this.props.searchValue}\n              />\n            </tr>\n          </table>\n        );\n      }\n    }\n  }\n}\n","/Users/amit/Desktop/Coinbook-master/src/components/SearchBar/SearchBar.js",["145"],"/Users/amit/Desktop/Coinbook-master/src/components/Settings/CurrencySettings.js",["146","147","148"],"/Users/amit/Desktop/Coinbook-master/src/components/MoonPayPopup.js",["149","150"],"import React from \"react\";\nimport Iframe from \"react-iframe\";\nimport Popup from \"reactjs-popup\";\nimport axios from \"axios\";\nimport \"./MoonPayPopup.css\";\n\nexport default class MoonPayPopup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coinsOnMoonPay: this.props.coinsOnMoonPay,\n      url: `https://buy.moonpay.io?apiKey=pk_live_M4RiDyjN7nnYeRFyBlwDBZzPNlkZHrjn&currencyCode=${this.props.symbol}&colorCode=%23d1004d`,\n    };\n  }\n\n  render() {\n    let width = window.innerWidth;\n    if (this.state.coinsOnMoonPay.includes(this.props.coin.toLowerCase())) {\n      if (width > 768) {\n        return (\n          <Popup\n            contentStyle={{\n              width: \"400px\",\n              height: \"400px\",\n              padding: \"0px\",\n              borderRadius: \"12px\",\n              boxShadow: `rgb(226, 207, 213) 1.5px 1.5px 3px,\n            rgb(247, 242, 244) -3px -3px 6px -0.5px`,\n              border: \"none\",\n            }}\n            trigger={\n              <a className=\"btn-buy\">\n                <p className=\"buttontext\">\n                  {\" \"}\n                  Buy{\" \"}\n                  {this.props.coin.charAt(0).toUpperCase() +\n                    this.props.coin.slice(1)}{\" \"}\n                  💳\n                </p>\n              </a>\n            }\n            position=\"top left\"\n          >\n            <Iframe\n              allow=\"accelerometer; autoplay; camera; gyroscope; payment\"\n              frameborder=\"0\"\n              height=\"100%\"\n              colorCode=\"%23F0E7EA\"\n              src=\"https://buy-staging.moonpay.io?apiKey=pk_test_123\"\n              width=\"100%\"\n            >\n              <p>Your browser does not support iframes.</p>\n            </Iframe>\n          </Popup>\n        );\n      } else {\n        return (\n          <a className=\"btn-buy\" href={this.state.url}>\n            <p className=\"buttontext\">\n              {\" \"}\n              Buy{\" \"}\n              {this.props.coin.charAt(0).toUpperCase() +\n                this.props.coin.slice(1)}{\" \"}\n              💳\n            </p>\n          </a>\n        );\n      }\n    } else {\n      return <p></p>;\n    }\n  }\n}\n","/Users/amit/Desktop/Coinbook-master/src/components/PageSettings/pageSettings.js",["151","152","153","154","155","156","157"],"import React from \"react\";\nimport \"./pageSettings.css\";\nexport default class PageSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: this.props.pageNumber,\n    };\n  }\n\n  handlePageHandsDown() {\n    if (this.props.searchValue === \"\") {\n      if (this.props.pageNumber > 1) {\n        return (\n          <a\n            className=\"page-button\"\n            onClick={() => {\n              this.props.onClick(\"down\");\n            }}\n          >\n            ←\n          </a>\n        );\n      } else {\n        return <a></a>;\n      }\n    } else {\n    }\n  }\n  handlePageHandsup() {\n    if (this.props.searchValue === \"\") {\n      if (this.props.pageNumber < 25) {\n        return (\n          <a\n            className=\"page-button\"\n            onClick={() => {\n              this.props.onClick(\"up\");\n            }}\n          >\n            →\n          </a>\n        );\n      } else {\n        return <a></a>;\n      }\n    } else {\n    }\n  }\n\n  render() {\n    const { pageNumber } = this.props;\n    return (\n      <td colspan=\"8\">\n        <div class=\"container\">\n          {this.handlePageHandsDown()}\n          <br />\n          <p> Page {this.props.pageNumber} </p>\n          <br />\n          {this.handlePageHandsup()}\n        </div>\n      </td>\n    );\n  }\n}\n","/Users/amit/Desktop/Coinbook-master/src/components/Chart/Chart.js",["158","159","160","161","162","163","164","165","166","167","168"],"import React, { useState, useEffect } from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"./Chart.css\";\nimport MoonPayPopup from \"../MoonPayPopup.js\";\nimport { withTheme } from \"@material-ui/core\";\n\nconst Chart = (props) => {\n  const [chartData, setChartData] = useState({});\n  const [chartVol, setChartVol] = useState({});\n  const [id] = useState(props.id);\n  const [coinsOnMoonPay] = useState(props.coinsOnMoonPay);\n  const [currency] = useState(props.currency);\n  const [symbol] = useState(props.currencysymbols);\n  const [days] = useState(props.days);\n  const [redraw, setRedraw] = useState({});\n  const convertToBillions = (number) => {\n    if (number > 1000000) {\n      return (\n        (number / 1000000000).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") +\n        \"B\"\n      );\n    } else {\n      return number;\n    }\n  };\n  const mobileOrNot = () => {\n    let width = window.innerWidth;\n    if (width > 768) {\n      return <></>;\n    } else {\n      return <br />;\n    }\n  };\n  const chart = (props) => {\n    let daysChart = props.days;\n    let currency = props.currency;\n    let symbol = props.currencysymbols;\n    let time = [];\n    let price = [];\n    let priceSmaller = [];\n    let volume = [];\n    let volumeSmaller = [];\n    let timeSmaller = [];\n    let timeSmallerAndConvertedForVolume = [];\n\n    let timeSmallerAndConverted = [];\n    let whichCoin = id;\n    function roundDownPrice(number) {\n      if (number >= 1) {\n        const decimals = 2;\n        const amount =\n          Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n        return amount.toFixed(2);\n      } else if (number >= 0.001) {\n        const decimals = 6;\n        return (\n          Math.floor(number * Math.pow(10, decimals)) /\n          Math.pow(10, decimals).toFixed(4)\n        );\n      } else {\n        const decimals = 9;\n        return (\n          Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals)\n        );\n      }\n    }\n    axios\n      .get(\n        `https://api.coingecko.com/api/v3/coins/${whichCoin}/market_chart?vs_currency=${currency}&days=${daysChart}`\n      )\n      .then((res) => {\n        console.log(res);\n        for (const dataObj of res.data.prices) {\n          time.push(dataObj[0]);\n          price.push(dataObj[1]);\n        }\n        console.log(price);\n\n        for (var i = 0; i < price.length; i = i + 1) {\n          priceSmaller.push(roundDownPrice(price[i]));\n        }\n        for (var i = 0; i < time.length; i++) {\n          timeSmaller.push(time[i]);\n        }\n        for (var i = 0; i < timeSmaller.length; i++) {\n          timeSmallerAndConverted.push(moment(timeSmaller[i]).format(\"lll\"));\n        }\n        for (const dataObj of res.data.total_volumes) {\n          time.push(dataObj[0]);\n          volume.push(dataObj[1]);\n        }\n        console.log(volume);\n\n        for (var i = 0; i < volume.length; i = i + 4) {\n          volumeSmaller.push(volume[i]);\n        }\n        for (var i = 0; i < timeSmallerAndConverted.length; i = i + 4) {\n          timeSmallerAndConvertedForVolume.push(timeSmallerAndConverted[i]);\n        }\n        setChartData({\n          labels: timeSmallerAndConverted,\n          datasets: [\n            {\n              label: \"Price\",\n              backgroundColor: \"#5C68FF\",\n\n              borderWidth: \"0px\",\n              data: priceSmaller,\n            },\n          ],\n        });\n        setChartVol({\n          labels: timeSmallerAndConvertedForVolume,\n          datasets: [\n            {\n              label: \"Volume\",\n              backgroundColor: \"#222222\",\n              borderColor: \"rgba(135, 99, 225, 1)\",\n              data: volumeSmaller,\n            },\n          ],\n        });\n\n        setRedraw(true);\n        setRedraw(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    chart(props);\n  }, [props]);\n  return (\n    <div className=\"charts-div\">\n      <td className=\"charts\">\n        <p className=\"chart-name\">Price</p>\n        <Line\n          redraw={redraw}\n          data={chartData}\n          options={{\n            legend: {\n              display: false,\n            },\n            tooltips: {\n              displayColors: false,\n              mode: \"x-axis\",\n\n              backgroundColor: \"#FFFFFF\",\n              bodyFontColor: \"#000000\",\n              titleFontColor: \"#000000\",\n              borderWidth: 1,\n              borderColor: \"#F0F0F0\",\n              callbacks: {\n                label: function (tooltipItems) {\n                  if (tooltipItems.yLabel > 1) {\n                    return (\n                      symbol +\n                      tooltipItems.yLabel\n                        .toString()\n                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                    );\n                  } else {\n                    return symbol + tooltipItems.yLabel.toString();\n                  }\n                },\n              },\n            },\n            responsive: true,\n            title: { text: \"SCALE\", display: false },\n            elements: {\n              point: {\n                radius: 0,\n              },\n              line: {\n                tension: 0.05,\n              },\n            },\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    autoSkip: false,\n                    maxTicksLimit: 10,\n                    beginAtZero: true,\n                    fontColor: \"#000000\",\n                    callback: function (value) {\n                      if (value > 1) {\n                        return (\n                          props.currencysymbols +\n                          value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                        );\n                      } else {\n                        return props.currencysymbols + value.toString();\n                      }\n                    },\n                  },\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n              xAxes: [\n                {\n                  ticks: {\n                    maxTicksLimit: 4,\n                    maxRotation: 0,\n                    minRotation: 0,\n                    fontColor: \"#000000\",\n                    callback: function (value) {\n                      return value.split(\",\")[0];\n                    },\n                  },\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </td>\n      {mobileOrNot()}\n      <td className=\"charts-vol\">\n        <p className=\"chart-name\">Volume</p>\n        <Bar\n          redraw={redraw}\n          data={chartVol}\n          options={{\n            legend: {\n              display: false,\n            },\n            tooltips: {\n              displayColors: false,\n              mode: \"x-axis\",\n              backgroundColor: \"#FFFFFF\",\n              bodyFontColor: \"#000000\",\n              titleFontColor: \"#000000\",\n              borderWidth: 1,\n              borderColor: \"#F0F0F0\",\n              callbacks: {\n                label: function (tooltipItems) {\n                  return (\n                    symbol +\n                    tooltipItems.yLabel\n                      .toFixed(0)\n                      .toString()\n                      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  );\n                },\n              },\n            },\n            responsive: true,\n            title: { text: \"SCALE\", display: false },\n            elements: {\n              point: {\n                radius: 0,\n              },\n              line: {\n                tension: 0.05,\n              },\n            },\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    autoSkip: true,\n                    maxTicksLimit: 10,\n                    beginAtZero: true,\n                    fontColor: \"#000000\",\n                    callback: function (value) {\n                      return props.currencysymbols + convertToBillions(value);\n                    },\n                  },\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n              xAxes: [\n                {\n                  ticks: {\n                    maxTicksLimit: 4,\n                    maxRotation: 0,\n                    minRotation: 0,\n                    fontColor: \"#000000\",\n                    callback: function (value) {\n                      return value.split(\",\")[0];\n                    },\n                  },\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </td>\n    </div>\n  );\n};\n\nexport default Chart;\n","/Users/amit/Desktop/Coinbook-app/src/index.js",[],["169","170"],"/Users/amit/Desktop/Coinbook-app/src/serviceWorker.js",[],"/Users/amit/Desktop/Coinbook-app/src/App.js",["171","172","173","174","175","176","177"],"import React from \"react\";\nimport logo from \"./logoheader.svg\";\nimport \"./App.css\";\nimport CustomizedTables from \"./components/CustomizedTable/CustomizedTables.js\";\nimport SearchBar from \"./components/SearchBar/SearchBar.js\";\nimport axios from \"axios\";\nimport CurrencySettings from \"./components/Settings/CurrencySettings.js\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      searchOn: false,\n      value: \"\",\n      isLoaded: false,\n      coins: [],\n      coinsForCard: [],\n      rawCoins: [],\n      coinsOnMoonPay: [],\n      currencies: [\n        \"gbp\",\n        \"eur\",\n        \"usd\",\n        \"btc\",\n        \"eth\",\n        \"aud\",\n        \"cad\",\n        \"rub\",\n        \"krw\",\n        \"cny\",\n      ],\n      settings: [\"Coming Soon\"],\n      settingsAPIParam: {\n        All: \"all\",\n      },\n      currencySymbols: {\n        GBP: \"£\", // British Pound Sterling\n        EUR: \"€\", // Euro\n        CRC: \"₡\", // Costa Rican Colón\n        USD: \"$\", // US Dollar\n        ILS: \"₪\", // Israeli New Sheqel\n        INR: \"₹\", // Indian Rupee\n        JPY: \"¥\", // Japanese Yen\n        KRW: \"₩\", // South Korean Won\n        NGN: \"₦\", // Nigerian Naira\n        PHP: \"₱\", // Philippine Peso\n        PLN: \"zł\", // Polish Zloty\n        PYG: \"₲\", // Paraguayan Guarani\n        THB: \"฿\", // Thai Baht\n        AUD: \"$\",\n        CAD: \"$\",\n        RUB: \"₽\",\n        IDR: \"Rp\",\n        CNY: \"¥\",\n        BTC: \"₿\",\n        ETH: \"Ξ\",\n      },\n      currency: \"gbp\",\n      currencySymbol: \"£\",\n      dataSettings: \"all\",\n      pageNumber: 1,\n      pageSettings: [0, 250],\n      orderSelection: \"\",\n    };\n    this.onChange = this.onChange.bind(this);\n    this.handleCurrencyClick = this.handleCurrencyClick.bind(this);\n    this.handleSettingsClick = this.handleSettingsClick.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n    this.handleTableHeaderClick = this.handleTableHeaderClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.localStorage();\n    let currencyState = this.state.currency;\n    let settings = this.state.settingsAPIParam[this.state.dataSettings];\n    function checkLocalStorageC() {\n      if (localStorage.getItem(\"currency\") !== null) {\n        return localStorage.getItem(\"currency\");\n      } else {\n        return currencyState;\n      }\n    }\n    function checkLocalStorageS() {\n      if (localStorage.getItem(\"dataSettings\") !== null) {\n        return localStorage.getItem(\"dataSettings\");\n      } else {\n        return settings;\n      }\n    }\n    fetch(\n      `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${checkLocalStorageC()}&order=market_cap_desc&per_page=350&page=1&sparkline=false`\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            coins: result.slice(\n              this.state.pageSettings[0],\n              this.state.pageSettings[1]\n            ),\n            rawCoins: result,\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n\n    axios\n      .get(\n        `https://api.moonpay.io/v3/currencies?apiKey=pk_test_XYlfn9ISmwfjwReteBLpiN1TdSDV7Pw7`\n      )\n      .then((res) => {\n        let allNames = [];\n        for (let i = 0; res.data.length > i; i++) {\n          allNames.push(res.data[i].name.toLowerCase());\n        }\n        console.log(allNames);\n        this.setState({\n          coinsOnMoonPay: allNames,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  updateData(currency, settingsAllorDefi) {\n    let settings = this.state.settingsAPIParam[this.state.dataSettings];\n    function checkLocalStorageC() {\n      if (localStorage.getItem(\"currency\") !== null) {\n        return localStorage.getItem(\"currency\");\n      } else {\n        return this.state.currency;\n      }\n    }\n    function checkLocalStorageS() {\n      if (localStorage.getItem(\"dataSettings\") !== null) {\n        return localStorage.getItem(\"dataSettings\");\n      } else {\n        return settings;\n      }\n    }\n    console.log(settingsAllorDefi);\n    fetch(\n      `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${checkLocalStorageC()}&order=market_cap_desc&per_page=350&page=1&sparkline=false`\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            coins: result.slice(\n              this.state.pageSettings[0],\n              this.state.pageSettings[1]\n            ),\n            rawCoins: result,\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n\n  localStorage() {\n    if (localStorage.getItem(\"currency\") !== null) {\n      this.setState({\n        currency: localStorage.getItem(\"currency\"),\n      });\n    }\n\n    if (localStorage.getItem(\"dataSettings\") !== null) {\n      this.setState({\n        dataSettings: localStorage.getItem(\"dataSettings\"),\n      });\n    }\n  }\n\n  onChange(e) {\n    const allCoins = this.state.rawCoins;\n    this.setState({\n      value: e.target.value,\n    });\n    // if searchbar is empty then show all the coins\n    if (e.target.value == \"\") {\n      this.setState({\n        coins: allCoins.slice(\n          this.state.pageSettings[0],\n          this.state.pageSettings[1]\n        ),\n      });\n      // if backspace on searchbar then table renders all coins\n    } else if (e.target.value.length < this.state.value.length) {\n      {\n        let searcjQery = e.target.value.toLowerCase(),\n          displayedCoins = allCoins.filter((el) => {\n            let searchValue = el.name.toLowerCase();\n\n            return searchValue.indexOf(searcjQery) !== -1;\n          });\n        this.setState({\n          coins: allCoins.slice(\n            this.state.pageSettings[0],\n            this.state.pageSettings[1]\n          ),\n        });\n      }\n      // if something has been entered on the searchbar then it searches through the coins array taking name and symbol into account\n    } else if (e.target.value !== this.state.value) {\n      {\n        let searcjQery = e.target.value.toLowerCase(),\n          displayedCoins = allCoins.filter((el) => {\n            let searchValue = el.name\n              .toLowerCase()\n              .concat(el.symbol.toLowerCase());\n            let searchBy = searchValue.indexOf(searcjQery) !== -1;\n            return searchBy;\n          });\n        this.setState({\n          coins: displayedCoins,\n        });\n      }\n    }\n  }\n  handleTableHeaderClick(e) {\n    const header = e.currentTarget.getAttribute(\"data-item\");\n    console.log(\"coins being managed\" + this.state.pageSettings);\n    if (header === this.state.orderSelection) {\n      const allCoins = this.state.rawCoins;\n      this.setState({\n        coins: allCoins.slice(\n          this.state.pageSettings[0],\n          this.state.pageSettings[1]\n        ),\n        orderSelection: \"\",\n      });\n    } else if (header === \"price_change_percentage_24h\") {\n      const coins = this.state.rawCoins;\n      const coinsOnPage = coins.slice(\n        this.state.pageSettings[0],\n        this.state.pageSettings[1]\n      );\n      const coinOrderByPrice = coinsOnPage.sort(\n        (a, b) =>\n          parseFloat(b.price_change_percentage_24h) -\n          parseFloat(a.price_change_percentage_24h)\n      );\n      console.log(coinOrderByPrice);\n      this.setState({\n        coins: coinOrderByPrice,\n        orderSelection: header,\n      });\n    } else if (header === \"total_volume\") {\n      const coins = this.state.rawCoins;\n      const coinsOnPage = coins.slice(\n        this.state.pageSettings[0],\n        this.state.pageSettings[1]\n      );\n      const coinOrderByPrice = coinsOnPage.sort(\n        (a, b) => parseFloat(b.total_volume) - parseFloat(a.total_volume)\n      );\n\n      this.setState({\n        coins: coinOrderByPrice,\n        orderSelection: header,\n      });\n    } else if (header === \"current_price\") {\n      const coins = this.state.rawCoins;\n      const coinsOnPage = coins.slice(\n        this.state.pageSettings[0],\n        this.state.pageSettings[1]\n      );\n      const coinOrderByPrice = coinsOnPage.sort(\n        (a, b) => parseFloat(b.current_price) - parseFloat(a.current_price)\n      );\n\n      this.setState({\n        coins: coinOrderByPrice,\n        orderSelection: header,\n      });\n    } else if (header === \"market_cap\") {\n      const coins = this.state.rawCoins;\n      const coinsOnPage = coins.slice(\n        this.state.pageSettings[0],\n        this.state.pageSettings[1]\n      );\n      const coinOrderByPrice = coinsOnPage.sort(\n        (a, b) => parseFloat(b.market_cap) - parseFloat(a.market_cap)\n      );\n\n      this.setState({\n        coins: coinOrderByPrice,\n        orderSelection: header,\n      });\n    } else if (header === \"market_cap_rank\") {\n      const coins = this.state.rawCoins;\n      const coinsOnPage = coins.slice(\n        this.state.pageSettings[0],\n        this.state.pageSettings[1]\n      );\n      const coinOrderByPrice = coinsOnPage.sort(\n        (a, b) => parseFloat(a.market_cap_rank) - parseFloat(b.market_cap_rank)\n      );\n\n      this.setState({\n        coins: coinOrderByPrice,\n        orderSelection: header,\n      });\n    }\n  }\n  handleCurrencyClick(e) {\n    this.setState({\n      currency: e.currentTarget.getAttribute(\"data-item\"),\n    });\n    localStorage.setItem(\"currency\", e.currentTarget.getAttribute(\"data-item\"));\n    return this.updateData(\n      e.currentTarget.getAttribute(\"data-item\"),\n      this.state.dataSettings\n    );\n  }\n  handleSettingsClick(e) {\n    this.setState({\n      dataSettings: this.state.settingsAPIParam[\n        e.currentTarget.getAttribute(\"data-item\")\n      ],\n      pageNumber: 1,\n      pageSettings: [0, 10],\n      orderSelection: \"\",\n    });\n    localStorage.setItem(\n      \"dataSettings\",\n      this.state.settingsAPIParam[e.currentTarget.getAttribute(\"data-item\")]\n    );\n\n    return this.updateData(\n      this.state.currency,\n      this.state.settingsAPIParam[e.currentTarget.getAttribute(\"data-item\")]\n    );\n  }\n  handlePageChange(e) {\n    const allCoins = this.state.rawCoins;\n    if (e === \"up\") {\n      const number = this.state.pageSettings.map(function (value) {\n        return value + 10;\n      });\n      this.setState({\n        pageNumber: this.state.pageNumber + 1,\n        pageSettings: number,\n        coins: allCoins.slice(number[0], number[1]),\n      });\n    } else if (e === \"down\") {\n      const number = this.state.pageSettings.map(function (value) {\n        return value - 10;\n      });\n      this.setState({\n        pageNumber: this.state.pageNumber - 1,\n        pageSettings: number,\n        coins: allCoins.slice(number[0], number[1]),\n      });\n    }\n  }\n\n  render() {\n    let width = window.innerWidth;\n    if (width > 768) {\n      return (\n        <div className=\"App\">\n          <body className=\"App-body\">\n            \n            <div style={{ width: 500 }}></div>\n\n            <div>\n              <SearchBar\n                inputValue={this.state.value}\n                onChange={this.onChange}\n              />\n              <span>\n                <CurrencySettings\n                  currencies={this.state.currencies}\n                  settings={this.handleSettingsClick}\n                  settingsOptions={this.state.settings}\n                  onClick={this.handleCurrencyClick}\n                  inputValue={this.state.currency}\n                />\n              </span>\n            </div>\n\n            <div>\n              <CustomizedTables\n                coins={this.state}\n                currency={this.state.currency}\n                currency_symbols={this.state.currencySymbols}\n                settings={this.state.settingsData}\n                pageNumber={this.state.pageNumber}\n                pageSettings={this.state.pageSettings}\n                onClick={this.handlePageChange}\n                searchValue={this.state.value}\n                handleTableHeaderClick={this.handleTableHeaderClick}\n                orderSelection={this.state.orderSelection}\n                coinsOnMoonPay={this.state.coinsOnMoonPay}\n              />\n            </div>\n\n            <div></div>\n          </body>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <body className=\"App-body\">\n            <div style={{ width: 500 }}></div>\n\n            <CurrencySettings\n              currencies={this.state.currencies}\n              settings={this.handleSettingsClick}\n              settingsOptions={this.state.settings}\n              onClick={this.handleCurrencyClick}\n              inputValue={this.state.currency}\n            />\n            <SearchBar inputValue={this.state.value} onChange={this.onChange} />\n\n            <CustomizedTables\n              coins={this.state}\n              currency={this.state.currency}\n              currency_symbols={this.state.currencySymbols}\n              settings={this.state.settingsData}\n              pageNumber={this.state.pageNumber}\n              pageSettings={this.state.pageSettings}\n              onClick={this.handlePageChange}\n              searchValue={this.state.value}\n              handleTableHeaderClick={this.handleTableHeaderClick}\n              orderSelection={this.state.orderSelection}\n              coinsOnMoonPay={this.state.coinsOnMoonPay}\n            />\n          </body>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;","/Users/amit/Desktop/Coinbook-app/src/components/Settings/CurrencySettings.js",["178","179","180"],"import React from \"react\";\nimport \"./CurrencySettings.css\";\n\nexport default class CurrencySettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currencies: this.props.currencies,\n      settingsOptions: this.props.settingsOptions,\n    };\n  }\n\n  render() {\n    let width = window.innerWidth;\n    const { currencies, settingsOptions } = this.state;\n    if (width > 768) {\n      return (\n        <span className=\"settings\">\n          <div class=\"dropdown\">\n            <button class=\"dropbtn\">💷</button>\n            <div class=\"dropdown-content\">\n              {currencies.map((currency) => (\n                <a\n                  data-item={currency}\n                  onClick={this.props.onClick}\n                  value={this.props.inputValue}\n                >\n                  {currency.toUpperCase()}\n                </a>\n              ))}\n            </div>\n          </div>\n        </span>\n      );\n    } else {\n      return (\n        <div className=\"settings\">\n          <div class=\"dropdown\">\n            <button class=\"dropbtn1\">💷</button>\n            <div class=\"dropdown-content\" id=\"dropdown-content-1\">\n              {currencies.map((currency) => (\n                <a\n                  data-item={currency}\n                  onClick={this.props.onClick}\n                  value={this.props.inputValue}\n                >\n                  {currency.toUpperCase()}\n                </a>\n              ))}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","/Users/amit/Desktop/Coinbook-app/src/components/CustomizedTable/CustomizedTables.js",["181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208"],"import React from \"react\";\nimport Iframe from \"react-iframe\";\nimport \"./CustomizedTables.css\";\nimport Chart from \"../Chart/Chart.js\";\nimport PageSettings from \"../PageSettings/pageSettings.js\";\nimport { purple } from \"@material-ui/core/colors\";\n\nexport default class CustomizedTables extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      coinClicked: \"\",\n      chartDays: 1,\n      redraw: false,\n      currency: this.props.currency,\n      currency_symbols: this.props.currency_symbols,\n      button_color: \"white\",\n      orderSelection: this.props.orderSelection,\n    };\n    this.dateClick = this.dateClick.bind(this);\n    this.buttonStyleForData = this.buttonStyleForData.bind(this);\n  }\n  handleUporDown(coinChange) {\n    if (coinChange > 0) {\n      return \"up\";\n    } else {\n      return \"down\";\n    }\n  }\n\n  roundDownPrice(number) {\n    if (number >= 1) {\n      const decimals = 2;\n      const amount =\n        Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n      return amount\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    } else if (number >= 0.001) {\n      const decimals = 6;\n      return (\n        Math.floor(number * Math.pow(10, decimals)) /\n        Math.pow(10, decimals).toString()\n      );\n    } else {\n      const decimals = 9;\n      return number.toFixed(8).toString();\n    }\n  }\n  roundDown(number, decimals) {\n    decimals = decimals || 0;\n    return Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n  }\n\n  handleClick(e) {\n    if (this.state.coinClicked !== e.currentTarget.getAttribute(\"data-item\")) {\n      const coin = e.currentTarget.getAttribute(\"data-item\");\n      const coinSymbol = e.currentTarget.getAttribute(\"data-item-symbol\");\n      this.setState({\n        coinClicked: coin,\n        coinClickedSymbol: coinSymbol,\n      });\n      console.log(\"We need to get the details for \" + coin);\n    } else {\n      this.setState({\n        coinClicked: \"\",\n        coinClickedSymbol: \"\",\n      });\n    }\n    this.chartRender(this.props.coins.id, this.state.chartDays);\n  }\n\n  dateClick(e) {\n    const dayRequest = e.currentTarget.getAttribute(\"data-item\");\n    this.setState({\n      chartDays: dayRequest,\n    });\n  }\n  buttonStyleForData(e) {\n    if (e.currentTarget.getAttribute(\"data-item\") === this.state.chartDays) {\n      return \"btn-2\";\n    } else {\n      return \"btn-1\";\n    }\n  }\n\n  chartRender(coin, days, market_cap, supply, currency) {\n    let width = window.innerWidth;\n    const { error, isLoaded, coins } = this.props.coins;\n    const symbol = this.state.currency_symbols[\n      this.props.currency.toUpperCase()\n    ];\n    const coinSymbol = this.state.coinClickedSymbol;\n    if (coin === this.state.coinClicked) {\n      if (width > 768) {\n        return (\n          <tr className=\"chartandpay\">\n            <td colspan=\"8\">\n              <div class=\"container\">\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"1-days\"\n                  data-item={1}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1 day\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"7-days\"\n                  data-item={7}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1 week\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"30-days\"\n                  data-item={30}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1 month\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"30-days\"\n                  data-item={90}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  3 months\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={365}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1 year\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={730}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  2 years\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={4700}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  All time\n                </a>\n              </div>\n\n              <Chart\n                id={coin}\n                days={days}\n                redraw={this.state.redraw}\n                currency={this.props.currency}\n                currencysymbols={symbol}\n              />\n            </td>\n          </tr>\n        );\n      } else {\n        return (\n          <tr className=\"chartandpay\">\n            <td colspan=\"8\">\n\n              <div class=\"container\">\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"1-days\"\n                  data-item={1}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1D\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"7-days\"\n                  data-item={7}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1W\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"30-days\"\n                  data-item={30}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1M\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"30-days\"\n                  data-item={90}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  3M\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={365}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  1Y\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={730}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  2Y\n                </a>\n                <a\n                  className={\"btn btn-1\"}\n                  key=\"365-days\"\n                  data-item={1825}\n                  onClick={this.dateClick}\n                  id={coin}\n                >\n                  ALL\n                </a>\n              </div>\n\n              <Chart\n                id={coin}\n                days={days}\n                redraw={this.state.redraw}\n                currency={this.props.currency}\n                currencysymbols={symbol}\n              />\n            </td>\n          </tr>\n        );\n      }\n    } else {\n    }\n  }\n\n  result() {\n    let width = window.innerWidth;\n    const { error, isLoaded, coins } = this.props.coins;\n    if (coins.length > 0) {\n      if (width > 768) {\n        const pageSettings = this.props.pageSettings;\n        return coins.map((coin) => (\n          <>\n            <tr\n              key={coin.id}\n              data-item={coin.id}\n              data-item-symbol={coin.symbol}\n              onClick={this.handleClick.bind(this)}\n            >\n              <td>{coin.market_cap_rank}</td>\n              <td className=\"theCoinId\">\n                <p className=\"theCoinIdSec\">\n                  <img src={coin.image} className=\"Coin-Logo\" />\n\n                  {coin.name}\n                  <span className=\"symbol\">{coin.symbol.toUpperCase()}</span>\n                </p>\n              </td>\n              <td>\n                {this.props.currency_symbols[this.props.currency.toUpperCase()]}\n                {this.roundDownPrice(coin.current_price)}\n              </td>\n              <td\n                className={this.handleUporDown(\n                  coin.price_change_percentage_24h\n                )}\n              >\n                {this.roundDown(coin.price_change_percentage_24h, 2)}%\n              </td>\n              <td>\n                {this.state.currency_symbols[this.props.currency.toUpperCase()]}\n                {this.roundDown(coin.total_volume)\n                  .toString()\n                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              </td>\n              <td>\n                {this.state.currency_symbols[this.props.currency.toUpperCase()]}\n                {coin.market_cap\n                  .toString()\n                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              </td>\n              <td>\n                {this.roundDown(coin.circulating_supply)\n                  .toString()\n                  .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\n              </td>\n            </tr>\n\n            {this.chartRender(coin.id, this.state.chartDays)}\n          </>\n        ));\n      } else {\n        const pageSettings = this.props.pageSettings;\n        return coins.map((coin) => (\n          <>\n            <tr\n              className=\"idcoin\"\n              key={coin.id}\n              data-item={coin.id}\n              data-item-symbol={coin.symbol}\n              onClick={this.handleClick.bind(this)}\n            >\n              <td className=\"theCoinId\">\n                <p className=\"theCoinIdSec\">\n                  <img src={coin.image} className=\"Coin-Logo\" />\n\n                  {coin.name}\n                  <span className=\"symbol\">{coin.symbol.toUpperCase()}</span>\n                </p>\n              </td>\n              <td>\n                {this.props.currency_symbols[this.props.currency.toUpperCase()]}\n                {this.roundDownPrice(coin.current_price)}\n              </td>\n              <td\n                className={this.handleUporDown(\n                  coin.price_change_percentage_24h\n                )}\n              >\n                {this.roundDown(coin.price_change_percentage_24h, 2)}%\n              </td>\n            </tr>\n            {this.chartRender(\n              coin.id,\n              this.state.chartDays,\n              coin.market_cap.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n              this.roundDown(coin.circulating_supply)\n                .toString()\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n              this.state.currency_symbols[this.props.currency.toUpperCase()]\n            )}\n          </>\n        ));\n      }\n    } else {\n      return <p>No results 😕</p>;\n    }\n  }\n  render() {\n    let width = window.innerWidth;\n    const { error, isLoaded, coins } = this.props.coins;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div class=\"loader\">🪙</div>;\n    } else {\n      if (width > 768) {\n        return (\n          <table>\n            <tr>\n              <th\n                className=\"table-header-button\"\n                data-item=\"market_cap_rank\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Rank\n              </th>\n              <th>Coin</th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"current_price\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Price\n              </th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"price_change_percentage_24h\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Change 24H\n              </th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"total_volume\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Volume\n              </th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"market_cap\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                MarketCap\n              </th>\n              <th>Supply</th>\n            </tr>\n            {this.result()}\n            <tr>\n              <PageSettings\n                pageNumber={this.props.pageNumber}\n                onClick={this.props.onClick}\n                searchValue={this.props.searchValue}\n              />\n            </tr>\n          </table>\n        );\n      } else {\n        return (\n          <table>\n            <tr>\n              <th>Coin</th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"current_price\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Price\n              </th>\n              <th\n                className=\"table-header-button\"\n                data-item=\"price_change_percentage_24h\"\n                onClick={this.props.handleTableHeaderClick}\n              >\n                Change 24H\n              </th>\n            </tr>\n            {this.result()}\n            <tr>\n              <PageSettings\n                pageNumber={this.props.pageNumber}\n                onClick={this.props.onClick}\n                searchValue={this.props.searchValue}\n              />\n            </tr>\n          </table>\n        );\n      }\n    }\n  }\n}\n","/Users/amit/Desktop/Coinbook-app/src/components/SearchBar/SearchBar.js",["209"],"import React from \"react\";\nimport \"./SearchBar.css\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let width = window.innerWidth;\n    if (width > 256) {\n      return (\n        <div class=\"wrapper\">\n          <input\n            className=\"search\"\n            placeholder=\"🔎 Search Coin\"\n            type=\"text\"\n            onChange={this.props.onChange}\n            value={this.props.inputValue}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div class=\"wrapper\">\n          <input\n            className=\"search\"\n            placeholder=\"🔎 Search Coin\"\n            type=\"text\"\n            onChange={this.props.onChange}\n            value={this.props.inputValue}\n          />\n        </div>\n      );\n    }\n  }\n}\nexport default SearchBar;\n","/Users/amit/Desktop/Coinbook-app/src/components/MoonPayPopup.js",["210","211"],"/Users/amit/Desktop/Coinbook-app/src/components/Chart/Chart.js",["212","213","214","215","216","217","218","219","220","221","222"],"import React, { useState, useEffect } from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport \"./Chart.css\";\nimport MoonPayPopup from \"../MoonPayPopup.js\";\nimport { withTheme } from \"@material-ui/core\";\n\nconst Chart = (props) => {\n  const [chartData, setChartData] = useState({});\n  const [chartVol, setChartVol] = useState({});\n  const [id] = useState(props.id);\n  const [coinsOnMoonPay] = useState(props.coinsOnMoonPay);\n  const [currency] = useState(props.currency);\n  const [symbol] = useState(props.currencysymbols);\n  const [days] = useState(props.days);\n  const [redraw, setRedraw] = useState({});\n  const convertToBillions = (number) => {\n    if (number > 1000000) {\n      return (\n        (number / 1000000000).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") +\n        \"B\"\n      );\n    } else {\n      return number;\n    }\n  };\n  const mobileOrNot = () => {\n    let width = window.innerWidth;\n    if (width > 768) {\n      return <></>;\n    } else {\n      return <br />;\n    }\n  };\n  const chart = (props) => {\n    let daysChart = props.days;\n    let currency = props.currency;\n    let symbol = props.currencysymbols;\n    let time = [];\n    let price = [];\n    let priceSmaller = [];\n    let volume = [];\n    let volumeSmaller = [];\n    let timeSmaller = [];\n    let timeSmallerAndConvertedForVolume = [];\n\n    let timeSmallerAndConverted = [];\n    let whichCoin = id;\n    function roundDownPrice(number) {\n      if (number >= 1) {\n        const decimals = 2;\n        const amount =\n          Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n        return amount.toFixed(2);\n      } else if (number >= 0.001) {\n        const decimals = 6;\n        return (\n          Math.floor(number * Math.pow(10, decimals)) /\n          Math.pow(10, decimals).toFixed(4)\n        );\n      } else {\n        const decimals = 9;\n        return (\n          Math.floor(number * Math.pow(10, decimals)) / Math.pow(10, decimals)\n        );\n      }\n    }\n    axios\n      .get(\n        `https://api.coingecko.com/api/v3/coins/${whichCoin}/market_chart?vs_currency=${currency}&days=${daysChart}`\n      )\n      .then((res) => {\n        console.log(res);\n        for (const dataObj of res.data.prices) {\n          time.push(dataObj[0]);\n          price.push(dataObj[1]);\n        }\n        console.log(price);\n\n        for (var i = 0; i < price.length; i = i + 1) {\n          priceSmaller.push(roundDownPrice(price[i]));\n        }\n        for (var i = 0; i < time.length; i++) {\n          timeSmaller.push(time[i]);\n        }\n        for (var i = 0; i < timeSmaller.length; i++) {\n          timeSmallerAndConverted.push(moment(timeSmaller[i]).format(\"lll\"));\n        }\n        for (const dataObj of res.data.total_volumes) {\n          time.push(dataObj[0]);\n          volume.push(dataObj[1]);\n        }\n        console.log(volume);\n\n        for (var i = 0; i < volume.length; i = i + 4) {\n          volumeSmaller.push(volume[i]);\n        }\n        for (var i = 0; i < timeSmallerAndConverted.length; i = i + 4) {\n          timeSmallerAndConvertedForVolume.push(timeSmallerAndConverted[i]);\n        }\n        setChartData({\n          labels: timeSmallerAndConverted,\n          datasets: [\n            {\n              label: \"Price\",\n              backgroundColor: \"rgba(63, 43, 212, 0.8)\",\n  background: `\n    linear-gradient(180deg, rgba(74, 61, 140, 1), rgba(18, 9, 17, 1)),\n    linear-gradient(333deg, rgba(153, 207, 255, 0.2), rgba(180, 255, 217, 0.08)),\n    radial-gradient(circle at 77% 89%, rgba(125, 163, 169, 0.8), rgba(125, 163, 169, 0) 50%),\n    radial-gradient(circle at 15% 95%, rgba(125, 163, 169, 0.8), rgba(125, 163, 169, 0) 43%),\n    radial-gradient(circle at 65% 23%, rgba(137, 151, 119, 0.4), rgba(137, 151, 119, 0) 70%),\n    radial-gradient(circle at 10% 0%, rgba(187, 211, 204, 0.33), rgba(187,211,204,0) 35%),\n    radial-gradient(circle at 11% 100%, rgba(131, 165, 203, 0.3), rgba(131, 165, 203, 0) 30%)\n    `,\n\n              borderWidth: \"0px\",\n              data: priceSmaller,\n            },\n          ],\n        });\n        setChartVol({\n          labels: timeSmallerAndConvertedForVolume,\n          datasets: [\n            {\n              label: \"Volume\",\n              backgroundColor: \"#222222\",\n              borderColor: \"rgba(135, 99, 225, 1)\",\n              data: volumeSmaller,\n            },\n          ],\n        });\n\n        setRedraw(true);\n        setRedraw(false);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    chart(props);\n  }, [props]);\n  return (\n    <div className=\"charts-div\">\n      <td className=\"charts\">\n        <p className=\"chart-name\">Price</p>\n        <Line\n          redraw={redraw}\n          data={chartData}\n          options={{\n            legend: {\n              display: false,\n            },\n            tooltips: {\n              displayColors: false,\n              mode: \"x-axis\",\n\n              backgroundColor: \"#FFFFFF\",\n              bodyFontColor: \"#000000\",\n              titleFontColor: \"#000000\",\n              borderWidth: 1,\n              borderColor: \"#F0F0F0\",\n              callbacks: {\n                label: function (tooltipItems) {\n                  if (tooltipItems.yLabel > 1) {\n                    return (\n                      symbol +\n                      tooltipItems.yLabel\n                        .toString()\n                        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                    );\n                  } else {\n                    return symbol + tooltipItems.yLabel.toString();\n                  }\n                },\n              },\n            },\n            responsive: true,\n            title: { text: \"SCALE\", display: false },\n            elements: {\n              point: {\n                radius: 0,\n              },\n              line: {\n                tension: 0.05,\n              },\n            },\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    autoSkip: false,\n                    maxTicksLimit: 10,\n                    beginAtZero: true,\n                    fontColor: \"#000000\",\n                    callback: function (value) {\n                      if (value > 1) {\n                        return (\n                          props.currencysymbols +\n                          value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                        );\n                      } else {\n                        return props.currencysymbols + value.toString();\n                      }\n                    },\n                  },\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n              xAxes: [\n                {\n                  ticks: {\n                    maxTicksLimit: 4,\n                    maxRotation: 0,\n                    minRotation: 0,\n                    fontColor: \"#000000\",\n                    callback: function (value) {\n                      return value.split(\",\")[0];\n                    },\n                  },\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </td>\n      {mobileOrNot()}\n      <td className=\"charts-vol\">\n        <p className=\"chart-name\">Volume</p>\n        <Bar\n          redraw={redraw}\n          data={chartVol}\n          options={{\n            legend: {\n              display: false,\n            },\n            tooltips: {\n              displayColors: false,\n              mode: \"x-axis\",\n              backgroundColor: \"#FFFFFF\",\n              bodyFontColor: \"#000000\",\n              titleFontColor: \"#000000\",\n              borderWidth: 1,\n              borderColor: \"#F0F0F0\",\n              callbacks: {\n                label: function (tooltipItems) {\n                  return (\n                    symbol +\n                    tooltipItems.yLabel\n                      .toFixed(0)\n                      .toString()\n                      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  );\n                },\n              },\n            },\n            responsive: true,\n            title: { text: \"SCALE\", display: false },\n            elements: {\n              point: {\n                radius: 0,\n              },\n              line: {\n                tension: 0.05,\n              },\n            },\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    autoSkip: true,\n                    maxTicksLimit: 10,\n                    beginAtZero: true,\n                    fontColor: \"#000000\",\n                    callback: function (value) {\n                      return props.currencysymbols + convertToBillions(value);\n                    },\n                  },\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n              xAxes: [\n                {\n                  ticks: {\n                    maxTicksLimit: 4,\n                    maxRotation: 0,\n                    minRotation: 0,\n                    fontColor: \"#000000\",\n                    callback: function (value) {\n                      return value.split(\",\")[0];\n                    },\n                  },\n                  gridLines: {\n                    display: false,\n                  },\n                },\n              ],\n            },\n          }}\n        />\n      </td>\n    </div>\n  );\n};\n\nexport default Chart;\n","/Users/amit/Desktop/Coinbook-app/src/components/PageSettings/pageSettings.js",["223","224","225","226","227","228","229"],"import React from \"react\";\nimport \"./pageSettings.css\";\nexport default class PageSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: this.props.pageNumber,\n    };\n  }\n\n  handlePageHandsDown() {\n    if (this.props.searchValue === \"\") {\n      if (this.props.pageNumber > 1) {\n        return (\n          <a\n            className=\"page-button\"\n            onClick={() => {\n              this.props.onClick(\"down\");\n            }}\n          >\n            ←\n          </a>\n        );\n      } else {\n        return <a></a>;\n      }\n    } else {\n    }\n  }\n  handlePageHandsup() {\n    if (this.props.searchValue === \"\") {\n      if (this.props.pageNumber < 1) {\n        return (\n          <a\n            className=\"page-button\"\n            onClick={() => {\n              this.props.onClick(\"up\");\n            }}\n          >\n            →\n          </a>\n        );\n      } else {\n        return <a></a>;\n      }\n    } else {\n    }\n  }\n\n  render() {\n    const { pageNumber } = this.props;\n    return (\n      <td colspan=\"8\">\n        <div class=\"container\">\n          {this.handlePageHandsDown()}\n          <br />\n          <p> Page {this.props.pageNumber} </p>\n          <br />\n          {this.handlePageHandsup()}\n        </div>\n      </td>\n    );\n  }\n}\n",{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":6,"column":10,"nodeType":"236","messageId":"237","endLine":6,"endColumn":32},{"ruleId":"234","severity":1,"message":"238","line":84,"column":14,"nodeType":"236","messageId":"237","endLine":84,"endColumn":32},{"ruleId":"234","severity":1,"message":"238","line":141,"column":14,"nodeType":"236","messageId":"237","endLine":141,"endColumn":32},{"ruleId":"239","severity":1,"message":"240","line":193,"column":24,"nodeType":"241","messageId":"242","endLine":193,"endColumn":26},{"ruleId":"243","severity":1,"message":"244","line":202,"column":7,"nodeType":"245","messageId":"246","endLine":215,"endColumn":8},{"ruleId":"234","severity":1,"message":"247","line":204,"column":11,"nodeType":"236","messageId":"237","endLine":204,"endColumn":25},{"ruleId":"243","severity":1,"message":"244","line":218,"column":7,"nodeType":"245","messageId":"246","endLine":230,"endColumn":8},{"ruleId":"248","severity":1,"message":"249","line":381,"column":17,"nodeType":"250","endLine":381,"endColumn":52},{"ruleId":"248","severity":1,"message":"249","line":438,"column":17,"nodeType":"250","endLine":438,"endColumn":52},{"ruleId":"234","severity":1,"message":"251","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":20},{"ruleId":"234","severity":1,"message":"252","line":3,"column":8,"nodeType":"236","messageId":"237","endLine":3,"endColumn":12},{"ruleId":"234","severity":1,"message":"253","line":4,"column":8,"nodeType":"236","messageId":"237","endLine":4,"endColumn":19},{"ruleId":"234","severity":1,"message":"254","line":5,"column":8,"nodeType":"236","messageId":"237","endLine":5,"endColumn":19},{"ruleId":"234","severity":1,"message":"255","line":6,"column":8,"nodeType":"236","messageId":"237","endLine":6,"endColumn":14},{"ruleId":"234","severity":1,"message":"256","line":7,"column":8,"nodeType":"236","messageId":"237","endLine":7,"endColumn":18},{"ruleId":"234","severity":1,"message":"257","line":132,"column":37,"nodeType":"236","messageId":"237","endLine":132,"endColumn":53},{"ruleId":"248","severity":1,"message":"249","line":147,"column":21,"nodeType":"250","endLine":147,"endColumn":63},{"ruleId":"230","replacedBy":"258"},{"ruleId":"232","replacedBy":"259"},{"ruleId":"234","severity":1,"message":"260","line":2,"column":8,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"261","line":6,"column":10,"nodeType":"236","messageId":"237","endLine":6,"endColumn":16},{"ruleId":"234","severity":1,"message":"262","line":67,"column":13,"nodeType":"236","messageId":"237","endLine":67,"endColumn":21},{"ruleId":"234","severity":1,"message":"263","line":110,"column":13,"nodeType":"236","messageId":"237","endLine":110,"endColumn":18},{"ruleId":"234","severity":1,"message":"264","line":110,"column":20,"nodeType":"236","messageId":"237","endLine":110,"endColumn":28},{"ruleId":"234","severity":1,"message":"265","line":110,"column":30,"nodeType":"236","messageId":"237","endLine":110,"endColumn":35},{"ruleId":"266","severity":1,"message":"267","line":121,"column":17,"nodeType":"250","endLine":127,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":130,"column":17,"nodeType":"250","endLine":136,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":139,"column":17,"nodeType":"250","endLine":145,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":148,"column":17,"nodeType":"250","endLine":154,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":157,"column":17,"nodeType":"250","endLine":163,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":166,"column":17,"nodeType":"250","endLine":172,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":175,"column":17,"nodeType":"250","endLine":181,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":219,"column":17,"nodeType":"250","endLine":225,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":228,"column":17,"nodeType":"250","endLine":234,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":237,"column":17,"nodeType":"250","endLine":243,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":246,"column":17,"nodeType":"250","endLine":252,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":255,"column":17,"nodeType":"250","endLine":261,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":264,"column":17,"nodeType":"250","endLine":270,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":273,"column":17,"nodeType":"250","endLine":279,"endColumn":18},{"ruleId":"234","severity":1,"message":"263","line":310,"column":13,"nodeType":"236","messageId":"237","endLine":310,"endColumn":18},{"ruleId":"234","severity":1,"message":"264","line":310,"column":20,"nodeType":"236","messageId":"237","endLine":310,"endColumn":28},{"ruleId":"234","severity":1,"message":"268","line":313,"column":15,"nodeType":"236","messageId":"237","endLine":313,"endColumn":27},{"ruleId":"248","severity":1,"message":"249","line":325,"column":19,"nodeType":"250","endLine":325,"endColumn":65},{"ruleId":"234","severity":1,"message":"268","line":365,"column":15,"nodeType":"236","messageId":"237","endLine":365,"endColumn":27},{"ruleId":"248","severity":1,"message":"249","line":377,"column":19,"nodeType":"250","endLine":377,"endColumn":65},{"ruleId":"234","severity":1,"message":"265","line":413,"column":30,"nodeType":"236","messageId":"237","endLine":413,"endColumn":35},{"ruleId":"269","severity":1,"message":"270","line":5,"column":3,"nodeType":"271","messageId":"272","endLine":7,"endColumn":4},{"ruleId":"234","severity":1,"message":"273","line":15,"column":25,"nodeType":"236","messageId":"237","endLine":15,"endColumn":40},{"ruleId":"266","severity":1,"message":"267","line":23,"column":17,"nodeType":"250","endLine":27,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":42,"column":17,"nodeType":"250","endLine":46,"endColumn":18},{"ruleId":"234","severity":1,"message":"274","line":4,"column":8,"nodeType":"236","messageId":"237","endLine":4,"endColumn":13},{"ruleId":"266","severity":1,"message":"267","line":32,"column":15,"nodeType":"250","endLine":32,"endColumn":38},{"ruleId":"266","severity":1,"message":"267","line":15,"column":11,"nodeType":"250","endLine":20,"endColumn":12},{"ruleId":"275","severity":1,"message":"276","line":25,"column":16,"nodeType":"250","endLine":25,"endColumn":19},{"ruleId":"266","severity":1,"message":"267","line":25,"column":16,"nodeType":"250","endLine":25,"endColumn":19},{"ruleId":"266","severity":1,"message":"267","line":34,"column":11,"nodeType":"250","endLine":39,"endColumn":12},{"ruleId":"275","severity":1,"message":"276","line":44,"column":16,"nodeType":"250","endLine":44,"endColumn":19},{"ruleId":"266","severity":1,"message":"267","line":44,"column":16,"nodeType":"250","endLine":44,"endColumn":19},{"ruleId":"234","severity":1,"message":"277","line":51,"column":13,"nodeType":"236","messageId":"237","endLine":51,"endColumn":23},{"ruleId":"234","severity":1,"message":"278","line":6,"column":8,"nodeType":"236","messageId":"237","endLine":6,"endColumn":20},{"ruleId":"234","severity":1,"message":"279","line":7,"column":10,"nodeType":"236","messageId":"237","endLine":7,"endColumn":19},{"ruleId":"234","severity":1,"message":"280","line":13,"column":10,"nodeType":"236","messageId":"237","endLine":13,"endColumn":24},{"ruleId":"234","severity":1,"message":"281","line":14,"column":10,"nodeType":"236","messageId":"237","endLine":14,"endColumn":18},{"ruleId":"234","severity":1,"message":"282","line":16,"column":10,"nodeType":"236","messageId":"237","endLine":16,"endColumn":14},{"ruleId":"234","severity":1,"message":"283","line":39,"column":9,"nodeType":"236","messageId":"237","endLine":39,"endColumn":15},{"ruleId":"284","severity":1,"message":"285","line":84,"column":18,"nodeType":"236","messageId":"286","endLine":84,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":87,"column":18,"nodeType":"236","messageId":"286","endLine":87,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":96,"column":18,"nodeType":"236","messageId":"286","endLine":96,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":99,"column":18,"nodeType":"236","messageId":"286","endLine":99,"endColumn":19},{"ruleId":"287","severity":1,"message":"288","line":136,"column":6,"nodeType":"289","endLine":136,"endColumn":13,"suggestions":"290"},{"ruleId":"230","replacedBy":"291"},{"ruleId":"232","replacedBy":"292"},{"ruleId":"234","severity":1,"message":"293","line":2,"column":8,"nodeType":"236","messageId":"237","endLine":2,"endColumn":12},{"ruleId":"234","severity":1,"message":"238","line":83,"column":14,"nodeType":"236","messageId":"237","endLine":83,"endColumn":32},{"ruleId":"234","severity":1,"message":"238","line":140,"column":14,"nodeType":"236","messageId":"237","endLine":140,"endColumn":32},{"ruleId":"239","severity":1,"message":"240","line":192,"column":24,"nodeType":"241","messageId":"242","endLine":192,"endColumn":26},{"ruleId":"243","severity":1,"message":"244","line":201,"column":7,"nodeType":"245","messageId":"246","endLine":214,"endColumn":8},{"ruleId":"234","severity":1,"message":"247","line":203,"column":11,"nodeType":"236","messageId":"237","endLine":203,"endColumn":25},{"ruleId":"243","severity":1,"message":"244","line":217,"column":7,"nodeType":"245","messageId":"246","endLine":229,"endColumn":8},{"ruleId":"234","severity":1,"message":"273","line":15,"column":25,"nodeType":"236","messageId":"237","endLine":15,"endColumn":40},{"ruleId":"266","severity":1,"message":"267","line":23,"column":17,"nodeType":"250","endLine":27,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":42,"column":17,"nodeType":"250","endLine":46,"endColumn":18},{"ruleId":"234","severity":1,"message":"260","line":2,"column":8,"nodeType":"236","messageId":"237","endLine":2,"endColumn":14},{"ruleId":"234","severity":1,"message":"261","line":6,"column":10,"nodeType":"236","messageId":"237","endLine":6,"endColumn":16},{"ruleId":"234","severity":1,"message":"262","line":47,"column":13,"nodeType":"236","messageId":"237","endLine":47,"endColumn":21},{"ruleId":"234","severity":1,"message":"263","line":90,"column":13,"nodeType":"236","messageId":"237","endLine":90,"endColumn":18},{"ruleId":"234","severity":1,"message":"264","line":90,"column":20,"nodeType":"236","messageId":"237","endLine":90,"endColumn":28},{"ruleId":"234","severity":1,"message":"265","line":90,"column":30,"nodeType":"236","messageId":"237","endLine":90,"endColumn":35},{"ruleId":"234","severity":1,"message":"294","line":94,"column":11,"nodeType":"236","messageId":"237","endLine":94,"endColumn":21},{"ruleId":"266","severity":1,"message":"267","line":101,"column":17,"nodeType":"250","endLine":107,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":110,"column":17,"nodeType":"250","endLine":116,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":119,"column":17,"nodeType":"250","endLine":125,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":128,"column":17,"nodeType":"250","endLine":134,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":137,"column":17,"nodeType":"250","endLine":143,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":146,"column":17,"nodeType":"250","endLine":152,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":155,"column":17,"nodeType":"250","endLine":161,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":182,"column":17,"nodeType":"250","endLine":188,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":191,"column":17,"nodeType":"250","endLine":197,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":200,"column":17,"nodeType":"250","endLine":206,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":209,"column":17,"nodeType":"250","endLine":215,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":218,"column":17,"nodeType":"250","endLine":224,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":227,"column":17,"nodeType":"250","endLine":233,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":236,"column":17,"nodeType":"250","endLine":242,"endColumn":18},{"ruleId":"234","severity":1,"message":"263","line":264,"column":13,"nodeType":"236","messageId":"237","endLine":264,"endColumn":18},{"ruleId":"234","severity":1,"message":"264","line":264,"column":20,"nodeType":"236","messageId":"237","endLine":264,"endColumn":28},{"ruleId":"234","severity":1,"message":"268","line":267,"column":15,"nodeType":"236","messageId":"237","endLine":267,"endColumn":27},{"ruleId":"248","severity":1,"message":"249","line":279,"column":19,"nodeType":"250","endLine":279,"endColumn":65},{"ruleId":"234","severity":1,"message":"268","line":319,"column":15,"nodeType":"236","messageId":"237","endLine":319,"endColumn":27},{"ruleId":"248","severity":1,"message":"249","line":331,"column":19,"nodeType":"250","endLine":331,"endColumn":65},{"ruleId":"234","severity":1,"message":"265","line":367,"column":30,"nodeType":"236","messageId":"237","endLine":367,"endColumn":35},{"ruleId":"269","severity":1,"message":"270","line":5,"column":3,"nodeType":"271","messageId":"272","endLine":7,"endColumn":4},{"ruleId":"234","severity":1,"message":"274","line":4,"column":8,"nodeType":"236","messageId":"237","endLine":4,"endColumn":13},{"ruleId":"266","severity":1,"message":"267","line":32,"column":15,"nodeType":"250","endLine":32,"endColumn":38},{"ruleId":"234","severity":1,"message":"278","line":6,"column":8,"nodeType":"236","messageId":"237","endLine":6,"endColumn":20},{"ruleId":"234","severity":1,"message":"279","line":7,"column":10,"nodeType":"236","messageId":"237","endLine":7,"endColumn":19},{"ruleId":"234","severity":1,"message":"280","line":13,"column":10,"nodeType":"236","messageId":"237","endLine":13,"endColumn":24},{"ruleId":"234","severity":1,"message":"281","line":14,"column":10,"nodeType":"236","messageId":"237","endLine":14,"endColumn":18},{"ruleId":"234","severity":1,"message":"282","line":16,"column":10,"nodeType":"236","messageId":"237","endLine":16,"endColumn":14},{"ruleId":"234","severity":1,"message":"283","line":39,"column":9,"nodeType":"236","messageId":"237","endLine":39,"endColumn":15},{"ruleId":"284","severity":1,"message":"285","line":84,"column":18,"nodeType":"236","messageId":"286","endLine":84,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":87,"column":18,"nodeType":"236","messageId":"286","endLine":87,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":96,"column":18,"nodeType":"236","messageId":"286","endLine":96,"endColumn":19},{"ruleId":"284","severity":1,"message":"285","line":99,"column":18,"nodeType":"236","messageId":"286","endLine":99,"endColumn":19},{"ruleId":"287","severity":1,"message":"288","line":145,"column":6,"nodeType":"289","endLine":145,"endColumn":13,"suggestions":"295"},{"ruleId":"266","severity":1,"message":"267","line":15,"column":11,"nodeType":"250","endLine":20,"endColumn":12},{"ruleId":"275","severity":1,"message":"276","line":25,"column":16,"nodeType":"250","endLine":25,"endColumn":19},{"ruleId":"266","severity":1,"message":"267","line":25,"column":16,"nodeType":"250","endLine":25,"endColumn":19},{"ruleId":"266","severity":1,"message":"267","line":34,"column":11,"nodeType":"250","endLine":39,"endColumn":12},{"ruleId":"275","severity":1,"message":"276","line":44,"column":16,"nodeType":"250","endLine":44,"endColumn":19},{"ruleId":"266","severity":1,"message":"267","line":44,"column":16,"nodeType":"250","endLine":44,"endColumn":19},{"ruleId":"234","severity":1,"message":"277","line":51,"column":13,"nodeType":"236","messageId":"237","endLine":51,"endColumn":23},"no-native-reassign",["296"],"no-negated-in-lhs",["297"],"no-unused-vars","'MoonPayCheckWhichCoins' is defined but never used.","Identifier","unusedVar","'checkLocalStorageS' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'displayedCoins' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'makeStyles' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'currency_symbols' is assigned a value but never used.",["296"],["297"],"'Iframe' is defined but never used.","'purple' is defined but never used.","'decimals' is assigned a value but never used.","'error' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'coins' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'pageSettings' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'settingsOptions' is assigned a value but never used.","'axios' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'pageNumber' is assigned a value but never used.","'MoonPayPopup' is defined but never used.","'withTheme' is defined but never used.","'coinsOnMoonPay' is assigned a value but never used.","'currency' is assigned a value but never used.","'days' is assigned a value but never used.","'symbol' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chart'. Either include it or remove the dependency array.","ArrayExpression",["298"],["296"],["297"],"'logo' is defined but never used.","'coinSymbol' is assigned a value but never used.",["299"],"no-global-assign","no-unsafe-negation",{"desc":"300","fix":"301"},{"desc":"300","fix":"302"},"Update the dependencies array to be: [chart, props]",{"range":"303","text":"304"},{"range":"305","text":"304"},[3930,3937],"[chart, props]",[4588,4595]]